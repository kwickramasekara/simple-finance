"use client";

import Alert from "@/components/common/alert";
import {
  createMFAChallenge,
  verifyMFAChallengeAction,
} from "@/lib/api/account";
import { useEffect, useState } from "react";
import { useFormState } from "react-dom";
import OTP from "@/components/forms/otp";
import { useRouter } from "next/navigation";
import Loading from "@/components/common/loading";
import { Button } from "@/components/ui/button";

export default function MFA() {
  const router = useRouter();
  const initialState = {
    error: "",
    success: false,
  };
  const [state, formAction] = useFormState(
    verifyMFAChallengeAction,
    initialState
  );
  const [challengeError, setChallengeError] = useState<string | null>(null);
  const [challengeId, setChallengeId] = useState(undefined);
  const [isLoading, setLoading] = useState(false);

  const init = async function () {
    setLoading(true);
    const response = await createMFAChallenge();
    if (response.error) {
      setChallengeError(response.error);
    } else {
      setChallengeId(response.success);
    }

    setLoading(false);
  };

  useEffect(() => {
    init();
  }, []);

  useEffect(() => {
    if (state.success) router.push("/dashboard");
  }, [state.success]);

  return (
    <div className="mx-auto px-2 grid gap-10 max-w-[360px]">
      <div className="grid gap-2">
        <h2 className="text-4xl font-semibold">Sign In</h2>
        <p className="text-sm text-muted-foreground">
          Please enter the one-time passcode generated by your MFA device.
        </p>
      </div>
      {challengeId && (
        <>
          <form action={formAction}>
            <input type="hidden" name="challengeId" value={challengeId} />
            <OTP disabled={state.success} />
          </form>
          {state.error && <Alert type="error">{state.error}</Alert>}
        </>
      )}

      {isLoading && <Loading />}

      {challengeError && <Alert type="error">{challengeError}</Alert>}
    </div>
  );
}
