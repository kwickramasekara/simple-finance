import OTP from "@/components/forms/otp";
import {
  createMFAChallenge,
  verifyMFAChallengeAction,
} from "@/lib/api/account";
import { useEffect, useState } from "react";
import Alert from "@/components/common/alert";
import Loading from "@/components/common/loading";
import { useFormState } from "react-dom";

export default function MFARegerateCodesStepOne({
  stepper,
}: {
  stepper: (step: number) => void;
}) {
  const initialState = {
    error: "",
    success: false,
  };
  const [challengeError, setChallengeError] = useState<string | null>(null);
  const [isLoading, setIsLoading] = useState<boolean>(false);
  const [challengeId, setChallengeId] = useState<any>(null);
  const [state, formAction] = useFormState(
    verifyMFAChallengeAction,
    initialState
  );

  const init = async function () {
    setIsLoading(true);
    const response = await createMFAChallenge();
    if (response.error) {
      setChallengeError(response.error);
    } else {
      setChallengeId(response.success);
    }
    setIsLoading(false);
  };

  useEffect(() => {
    init();
  }, []);

  useEffect(() => {
    if (state.success) stepper(2);
  }, [state.success]);

  return (
    <>
      {challengeError && <Alert type="error">{challengeError}</Alert>}

      {isLoading && <Loading />}

      {challengeId && (
        <>
          <p className="text-sm text-muted-foreground">
            Please enter the OTP code generated by your MFA device to continue.
          </p>
          <form action={formAction}>
            <input type="hidden" name="challengeId" value={challengeId} />
            <OTP />
          </form>
          {state.error && <Alert type="error">{state.error}</Alert>}
        </>
      )}
    </>
  );
}
